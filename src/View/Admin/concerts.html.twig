{# this instruction forces escaping of text #}
{% autoescape 'html' %}


{% extends 'layout.html.twig' %}

{# TODO :
    This page will work at two levels:
 1) without JS. all is done through server-side validation
 2) with JS → write .needJS. client-side + server-side validation
_ client-side input validation  through JS;
_ AJAX requests for modifying more than 1 entry per POST request
_ jquery hook to show
#}


{% block title %}Festizik – administration des concerts{% endblock %}

{% block keywords %}festizik,concerts,administration{% endblock %}


{% block stylesheet %}
    {{ parent() }}
    <link rel="stylesheet" href="/assets/css/adminConcert.css">
{% endblock %}



{# needed variables : sceneNames[] selectedScene #}
{% block selectForScene %}
    <label class="form-group">
        Scène&nbsp:
        <select name="scene">
            {# using scene names instead of their id seems slower but more secure #}
            {% for name in sceneNames %}
                <option value="{{ name }}" {% if name == selectedScene %}selected{% endif %}>
                    {{ name }}
                </option>
            {% endfor %}
{#TODO : WRITE JS to make it work #}
{#TODO : Write .needJS #}
            {# this one is visible only if JS is operational#}
                <option value="newScene" class="needJS">
                    Nouvelle scène&nbsp...
                </option>
        </select>
    </label>
{% endblock %}


{# need variables : artistNames[] selectedScene #}
{% block selectForArtist %}
    <label class="form-group">
        Artiste&nbsp;:
        <select name="artist">
            {% for name in artistNames %}
                <option value="name" {% if name == selectedArtist %}selected{% endif %}>
                    {{ name }}
                </option>
            {% endfor %}
{#TODO : WRITE JS to make it work #}
{#TODO : Write .needJS #}
            {# this one is visible only if JS is operational#}
            <option value="newScene" class="needJS">
                Nouvel artiste&nbsp...
            </option>
        </select>
    </label>
{% endblock %}


{% block content %}
    <header>
        <svg xmlns="http://www.w3.org/2000/svg"
             viewBox="0 0 100 100" preserveAspectRatio="none">
            <polygon fill="orange" points="0,0 100,100 100,0"/>
            <line stroke="darkred" x1="0" y1="0" x2="100" y2="100" />
        </svg>

        <h1>Les concerts</h1>
    </header>

    <hr/>

    {% include 'errorList.html.twig' %}

    <nav>
        <form method="GET" action="" class="border border-info p-1">
            <p class="mb-0 font-weight-bold font-weight-italic">Trier&nbsp;...</p>

              {% for prop in sortableProperties %}
                <button type="submit" class="btn btn-info {% if prop.name == actualSort %}active{% endif %}"
                    title="recharger la page avec un ordre différent de tri"
                    name="sortBy" value="{{prop.name}}">
                    par {{prop.label}}
                </button>
              {% endfor %}

                <button type="submit" class="btn btn-info float-right"
                        name="sortBy" value="{{ actualSort }}"
                        title="recharger la page avec les même critères de tri">
                    <img src="/assets/images/sync.svg" alt="">
                    Recharger la page
                </button>

        </form>
        {# TODO :
        • affichage par défaut : une section portant date / nom de jour par jour.
        à l'intérieur, tout par row.
        ****
        • bouton de bascule : 1 section /jour (↑), 1 section /semaine, tout d'un coup sans distinction chronologique. →

        **** c'est pour le FILTRAGE qu'il y aura besoin de modifier la requête ...

        • bouton bascule : ligne / ligne  (cartes alignées verticalement),
                        1 entrée par ligne
                        ou compact (comme maintenant, dans une «.card-columns»)
        → PAR JAVASCRIPT !
        • Utiliser une seule connection PDO par page. #}
    </nav>



    <main>
      {% for concert in concerts %}
        <article class="bordered m-2">
            <form method="POST" action="" >

                {% if concert.Artist.ImageURL %}
                    <div>
                        <img class="img-fluid float-right img-thumbnail downsized"
                             src="/{{ concert.Artist.ImageURL }}"
                             title="{{ concert.Artist.Name }}"
                             alt="L'image pour «{{ concert.Artist.Name }}» est absente&nbsp;!">
                    </div>
                {% endif %}

                {% set selectedScene = concert.SceneName %}
                {{ block('selectForScene') }}

                <div class="form-group">
                    <label class="mr-2">
                        Date&nbsp:
                        <input type="date" name="DateLocale"
                                {# beware of the format we NEED to the browser : "Y-m-d"! #}
                               value="{{ concert.Date | date('Y-m-d') }}">
                    </label>

                    <label>
                        Heure&nbsp:
                        <input type="hour" name="hour"
                               value="{{ concert.hour }}">
                    </label>
                </div>

                {% set selectedArtist = concert.Artist.Name %}
                {{ block('selectForArtist') }}

                <div class="form-group">
                    <label class="form-group">
                        <strong>Concert annulé</strong>
                        <input type="checkbox" name="cancelled"
                               {% if concert.cancelled %}checked{% endif %}>
                    </label>

                    <button type="reset" class="btn btn-secondary"
                            title="annuler les changements effectués pour ce concert">
                         Annuler
                     </button>
                     <button type="submit" class="btn btn-primary"
                            title="Envoyer les changements effectués vers le serveur">
                         <span class="glyphicon glyphicon-cloud-upload"></span>
                         Envoyer
                     </button>

                </div>

            </form>
        </article>

       {% else %}
        <article>
            <p>Aucun événement enregistré</p>
        </article>

       {% endfor %}

    </main>
{% endblock %}


{% endautoescape %}
